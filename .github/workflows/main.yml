# Название рабочего процесса, которое будет отображаться в GitHub Actions
name: Deploy to GitHub Pages

# Триггер: запускать этот процесс при каждом пуше в ветку 'main'
on:
  push:
    branches:
      - main  # Или 'master', в зависимости от названия вашей основной ветки

# Разрешения для рабочего процесса, чтобы он мог развертывать на GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Задачи, которые нужно выполнить
jobs:
  # Единственная задача под названием 'deploy'
  deploy:
    # Запускать задачу в последней версии Ubuntu
    runs-on: ubuntu-latest
    
    # Шаги, которые будут выполняться последовательно
    steps:
      # 1. Клонирование репозитория
      # Этот шаг загружает ваш код (с плейсхолдерами) в рабочую среду
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Замена плейсхолдеров на секреты
      # Здесь мы используем команду 'sed' для поиска и замены текста в файле
      - name: Replace placeholders with secrets
        run: |
          # ВАЖНО: убедитесь, что имя файла (index.html) правильное
          sed -i "s|__WEATHER_API_KEY__|${{ secrets.WEATHER_API_KEY }}|g" index.html
          sed -i "s|__GEONAMES_USERNAME__|${{ secrets.GEONAMES_USERNAME }}|g" index.html

      # 3. Подготовка артефакта для GitHub Pages
      # Собираем все файлы, которые нужно опубликовать
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 4. Загрузка артефакта
      # Загружаем подготовленные файлы (уже с настоящими ключами)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.' # Указываем, что нужно загрузить все из корневой папки

      # 5. Развертывание на GitHub Pages
      # Финальный шаг, который делает ваш сайт доступным по ссылке
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
